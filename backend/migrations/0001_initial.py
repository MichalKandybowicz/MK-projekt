# Generated by Django 3.2.11 on 2022-01-15 15:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('level', models.IntegerField(default=1)),
                ('gold', models.IntegerField(default=50)),
                ('time_next_ritual', models.DateTimeField(auto_now_add=True, null=True)),
                ('rituals_count', models.IntegerField(default=0)),
                ('travel_count', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfigLvl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('eating', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('photo', models.ImageField(upload_to=None)),
                ('item_type', models.CharField(blank=True, max_length=50, null=True)),
                ('min_price', models.IntegerField(blank=True, null=True)),
                ('max_price', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_from_user', models.CharField(blank=True, max_length=50, null=True)),
                ('level', models.IntegerField(default=1)),
                ('photo_front', models.ImageField(upload_to=None)),
                ('photo_side', models.ImageField(upload_to=None)),
                ('travel_finish_time', models.DateTimeField(blank=True, null=True)),
                ('feed_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('luck_from_feed', models.IntegerField(default=1)),
                ('strength_from_feed', models.IntegerField(default=1)),
                ('dexterity_from_feed', models.IntegerField(default=1)),
                ('vitality_from_feed', models.IntegerField(default=1)),
                ('wisdom_from_feed', models.IntegerField(default=1)),
                ('intelligence_from_feed', models.IntegerField(default=1)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_monster', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonsterStatisticIncrease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('rarity_lvl', models.IntegerField(default=1)),
                ('luck', models.IntegerField(default=1)),
                ('strength', models.IntegerField(default=1)),
                ('dexterity', models.IntegerField(default=1)),
                ('vitality', models.IntegerField(default=1)),
                ('wisdom', models.IntegerField(default=1)),
                ('intelligence', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse_item', to='backend.item')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_change', models.DateTimeField(auto_now_add=True, null=True)),
                ('item_1_count', models.IntegerField(default=1)),
                ('item_2_count', models.IntegerField(default=1)),
                ('item_3_count', models.IntegerField(default=1)),
                ('item_4_count', models.IntegerField(default=1)),
                ('item_5_count', models.IntegerField(default=1)),
                ('item_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_item_1', to='backend.item')),
                ('item_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_item_2', to='backend.item')),
                ('item_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_item_3', to='backend.item')),
                ('item_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_item_4', to='backend.item')),
                ('item_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_item_5', to='backend.item')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ritual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('item_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_1', to='backend.item')),
                ('item_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_2', to='backend.item')),
                ('item_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_3', to='backend.item')),
                ('item_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_4', to='backend.item')),
                ('item_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_5', to='backend.item')),
                ('item_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_6', to='backend.item')),
                ('item_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_7', to='backend.item')),
                ('item_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_8', to='backend.item')),
                ('item_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_item_9', to='backend.item')),
                ('reward_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_reward_item', to='backend.item')),
                ('reward_monster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ritual_reward_monster', to='backend.monster')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to=None)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('gold_min', models.IntegerField(default=1)),
                ('gold_max', models.IntegerField(default=1)),
                ('item_1_rate', models.IntegerField(default=1)),
                ('item_2_rate', models.IntegerField(default=1)),
                ('item_3_rate', models.IntegerField(default=1)),
                ('item_4_rate', models.IntegerField(default=1)),
                ('item_5_rate', models.IntegerField(default=1)),
                ('item_6_rate', models.IntegerField(default=1)),
                ('item_7_rate', models.IntegerField(default=1)),
                ('reward_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_1', to='backend.item')),
                ('reward_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_2', to='backend.item')),
                ('reward_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_3', to='backend.item')),
                ('reward_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_4', to='backend.item')),
                ('reward_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_5', to='backend.item')),
                ('reward_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_6', to='backend.item')),
                ('reward_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_reward_7', to='backend.item')),
            ],
        ),
        migrations.AddField(
            model_name='monster',
            name='stats_increase',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_monster', to='backend.monsterstatisticincrease'),
        ),
        migrations.AddField(
            model_name='monster',
            name='travel_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monster_region', to='backend.region'),
        ),
    ]
